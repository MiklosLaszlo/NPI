main{
	open
		int ve ;
		double vf ;
		char vc ;
		bool vl ;
		list of int le, le2 ;
		list of double lf, lf2 ;
		list of char lc, lc2 ;
		list of bool ll ;
	close
	int funcionA (int a1, double a2, char a3) {
		open
			int x1, x2 ;
		close
		char funcionB (char b1, bool b2) {
				open
					double xf, x2 ;
				close
				double funcionC (bool c1, int c2) {
				open
					double x1 ;
				close
				x1= 1.3 ;
				if (c2 greater 10) then {
					c2= c2-1 ;
				}
				else{
					x1= 3.1 ;
				}
				return x1 ;
			};
			xf= functionC (true, 10);
			x2= xf*(funcionC(false,1)-funcionC(true,23))/10.0;
			while (x2*funcionC(false,1)-xf less 10.0){
				x2= x2*xf ;
			}
		};
		double funcionD (double d1){
			open
				char dato ;
				int valor ;
			close
			char funcionE (char e1, char e2) {
				open
					list of char frase1;
					list of char frase2;
				close
				frase1=['i','n','t','r','o','d','u','z','c','a',' ','d','o','s',' ','c','a','r','a','c','t','e','r','e','s',':',' '];
				frase2=['i','n','t','r','o','d','u','z','c','a',' ','u','n',' ','v','a','l','o','r',' ','e','n','t','e','r','o',':',' '];
				read (frase1, e1, e2);
				if (e1 equal 'a') then {
					return e1 ;
					}
				else { if (e1 equal 'b') then {
					return e2 ;
					}
					else {
						return ' ';
					}
				}
			};
			read (frase2, valor );
			if (d1 greater 0.0) then {
				open
					int dato ;
				close
				dato= 2 ;
				dato= valor*20/dato ;
			}
			else {
				valor= valor * 100 ;
				d1= d1/1000.0 ;
			}
			return d1 ;
		};
	
	le = le++x@0;
	lf = lf++10.0@0;
	lc = lc++'c'@0;

	if( ?(le++20@0) equal 20) then {
		ve = ?pe ;
	}
	else{
		pe = pe * 2 ;
	}
	pe = pe2 - pe++10.0@0 * (20/2000) ; 
	
	return pe;
	};
;
};